# 서식은 이력서 양식이며, 이를 값 단위로 축소시킨 것
# - 문자열 내부에서 값들을 출력하는데 그 수량이 여러개라면...
#   이를 조립하는 것이 번거로우니 서식형태로 준비하는 것.

# %c : 문자하나 출력. 정수값 출력을 한다.
ch1 = "A"
ch2 = "한"
print("이것은 <%c>이고 저것은 <%c>입니다."%(ch1, ch2))
num1 = 65 # ASCII코드표
num2 = 90 # 해당 표를 기반으로 해서
num3 = 97 # 정수값을 문자값으로 바꿔 출력한다.
num4 = 122
num5 = 48
num6 = 57
print("%c %c %c %c %c %c"%(num1, num2, num3, num4, num5, num6))
# - 특성상 잘 안씀. 정수값을 준비하느리, 문자값을 작성하는게 더 빠르다.

# %d : 정수값 출력 - 숫자를 정수형태로 출력해준다.
value1 = 1024
value2 = 3.99
form = "값%d는 서식문자를 거쳐 %d가 됩니다."
print(form % (1, value1))
print(form % (2, value2)) # 소수점버림처리
print(form % (3, 10))

# %f : 실수값 출력.
value3 = 3.14 ** 7
print(value3)
print("%f" % (value3))
# 서식문자에 서식을 부여하여, 값의 출력형태를 바꿀 수 있다.
print("%.4f" % (value3))
print( ((value3*10000)//1)/10000 )
# 단순수학연산으로 처리가 안되는 반올림도 함께 해준다.

# %s : 문자열 출력
# - ※ 문자열 : 0개 이상의 문자들로 구성된 문자값
# - ※ 문자 : 1개의 문자로만 구성된 문자값. 0개는 불가능.
print("A", "강", "@", " ") # 문자값 - %c에 의하여 출력이 가능하다.
print("", "AB", "!!", "  ") # 문자열 - %s에 의하여 출력이 된다.
print("문자열 : %s" % ("ABC"))
print("문자값 : %s" % ('A'))
print("정수값 : %s" % (123))
print("실수값 : %s" % (3.14))
# 1) 서식을 만들면서 문자값을 추가할 때
# 2) 변수에 들어오는 값이 하나의 종류로 정해지지 않을 때
#    - 문자열 출력은 뭐가 되었든 출력이 가능하다.